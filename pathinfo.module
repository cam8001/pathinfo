<?php

function pathinfo_init() {
  if (!devel_silent() && variable_get('pathinfo_footer_display', FALSE)) {
    drupal_add_css(drupal_get_path('module', 'pathinfo') . '/pathinfo.css');
    drupal_register_shutdown_function('pathinfo_shutdown');
  }
}

/**
 * Implements hook_menu().
 */
function pathinfo_menu() {
  $items['admin/config/pathinfo'] = array(
    'title' => 'PathInfo Settings',
    'description' => 'Settings for PathInfo',
    'position' => 'right',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer megamenu'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
    'weight' => -15,
  );

  $items['admin/config/pathinfo/config'] = array(
    'title' => 'Configure PathInfo settings',
    'position' => 'right',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pathinfo_config_form'),
    'access arguments' => array('administer pathinfo'),
    'file' => 'pathinfo.admin.inc',
    'weight' => 3,
  );




  return $items;
}

/**
 * Implements hook_permission().
 */
function pathinfo_permission() {
  return array(
    'administer pathinfo' => array(
      'title' => t('Administer pathinfo settings.'),
    ),
    'access pathinfo' => array(
      'title' => t('View pathinfo details in footer.')
    )
  );
}

function pathinfo_shutdown() {
  print pathinfo_served_by();
}

function pathinfo_served_by() {
  $path = current_path();
  $menu = menu_get_item($path);
  $arguments = array_map('check_plain', $menu['page_arguments']);
  $arguments = implode(',', $arguments);
  $function = $menu['page_callback'];
  $is_form = FALSE;
  // Get the module this callback is implemented in.
  if ($function == 'drupal_get_form') {
    $function = $menu['page_arguments'][0];
    $is_form = TRUE;
  }
  $module = pathinfo_get_module_for_function($function);

  // Find the file this function is in.
  $reflection = new ReflectionFunction($function);
  $implemented_in = $reflection->getFileName();
  $line = $reflection->getStartLine();

  $t_arguments = array(
    '@path' => $path,
    '@function' => $function,
    '@arguments' => $arguments,
    '@module' => $module,
    '@implemented_in' => $implemented_in,
    '@line' => $line,
  );
  $message = '@path is served by @function';
  if ($is_form) {
    $message .= ' (form definition)';
  }
  $message .= ', implemented by @module in @implemented_in at line with arguments: @arguments';


  $output = t_safe($message, $t_arguments);
  return '<div class="pathinfo pathinfo-served-by">' . $output . '</div>';
}

function pathinfo_get_current_path() {
  return current_path();
}

/**
 * Given a function name, return the module that it appears in.
 *
 *
 * @param string $function_name
 *   Name of the function you'd like to cehck.
 * @return string
 *   The module name, or an empty string if not found.
 *
 * @todo test with modules with overlapping names, eg node and node_dog. Just have to
 * find some good test cases.
 *
 * @todo It seems that module_list() is very fast (use static cache), and we can call
 * it many times per request without a meaningful perfomance impact. However, it
 * is worth monitoring for performance issues.
 */
function pathinfo_get_module_for_function($function_name) {
  $implemented_in = '';
  $modules = module_list();
  // Go through all loaded modules
  foreach ($modules as $module) {
    ////dpm(strstr($function_name, $module), 'strstr');
    if (strstr($function_name, $module)) {
      if (strlen($module) > strlen($implemented_in)) {
        $implemented_in = $module;
      }
    }
  }

  return $implemented_in;
}