<?php
/**
 * @file
 * Hooks and core functions for the pathinfo module.
 */

/**
 * Implements hook_init().
 */
function pathinfo_init() {
  if (!devel_silent() && variable_get('pathinfo_footer_display', FALSE)) {
    drupal_add_css(drupal_get_path('module', 'pathinfo') . '/pathinfo.css');
    drupal_register_shutdown_function('pathinfo_shutdown');
  }
}

/**
 * Implements hook_menu().
 */
function pathinfo_menu() {
  $items['admin/config/pathinfo'] = array(
    'title' => 'PathInfo Settings',
    'description' => 'Settings for PathInfo',
    'position' => 'right',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer megamenu'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
    'weight' => -15,
  );

  $items['admin/config/pathinfo/config'] = array(
    'title' => 'Configure PathInfo settings',
    'position' => 'right',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pathinfo_config_form'),
    'access arguments' => array('administer pathinfo'),
    'file' => 'pathinfo.admin.inc',
    'weight' => 3,
  );
  
  return $items;
}

/**
 * Implements hook_permission().
 */
function pathinfo_permission() {
  return array(
    'administer pathinfo' => array(
      'title' => t('Administer pathinfo settings.'),
    ),
    'access pathinfo' => array(
      'title' => t('View pathinfo details in footer.')
    )
  );
}

/**
 * Implements hook_theme().
 */
function pathinfo_theme() {
  return array(
    'pathinfo_served_by' => array(
      'variables' => array(
        'path' => NULL,
        'function' => NULL,
        'arguments' => NULL,
        'module' => NULL,
        'implemented_in' => NULL,
        'line' => NULL,
      ),
      'file' => 'pathinfo.theme.inc',
    )
  );
}

/**
 * Shutdown callback.
 */
function pathinfo_shutdown() {
  // Try not to break non html pages.
  if (pathinfo_html_page()) {
    print pathinfo_served_by(pathinfo_get_info());
  }
}

function pathinfo_served_by($pathinfo) {
  return theme('pathinfo_served_by', $pathinfo);
}

/**
 * Get info about a supplied path, or the current path if none supplied.
 * 
 * @return array
 *  An associative array containing the path info:
 *   - path: System path to url.
 *   - function: The function that serves the path.
 *   - arguments: Any arguments passed to the function that serves the path.
 *   - module: The module that contains the function.
 *   - implemented_in: The file that contains the function.
 *   - line: The line the function is implemented on.
 */
function pathinfo_get_info($path = NULL) {
  if ($path == NULL) {
    $path = current_path();
  }
  $menu = menu_get_item($path);
  $arguments = array_map('check_plain', $menu['page_arguments']);
  $arguments = implode(',', $arguments);
  $function = $menu['page_callback'];
  $is_form = FALSE;
  // Get the module this callback is implemented in.
  if ($function == 'drupal_get_form') {
    $function = $menu['page_arguments'][0];
    $is_form = TRUE;
  }
  $module = pathinfo_get_module_for_function($function);

  // Find the file this function is in.
  $reflection = new ReflectionFunction($function);
  $implemented_in = $reflection->getFileName();
  $line = $reflection->getStartLine();


  return array(
    'path' => $path,
    'function' => $function,
    'arguments' => $arguments,
    'module' => $module,
    'implemented_in' => $implemented_in,
    'line' => $line,
    'is_form' => TRUE,
  );

}

/**
 * Returns the system url of the current page.
 *
 * @return string
 *   The path string (eg node/306).
 *
 * @see current_path()
 */
function pathinfo_get_current_path() {
  return current_path();
}

/**
 * Given a function name, return the module that it appears in.
 *
 * @param string $function_name
 *   Name of the function you'd like to cehck.
 * @return string
 *   The module name, or an empty string if not found.
 *
 * @todo test with modules with overlapping names, eg node and node_dog. Just
 * have to find some good test cases.
 *
 * @todo It seems that module_list() is very fast (use static cache), and we can
 * call it many times per request without a meaningful perfomance impact.
 * However, it is worth monitoring for performance issues.
 */
function pathinfo_get_module_for_function($function_name) {
  $implemented_in = '';
  $modules = module_list();
  // Go through all loaded modules
  foreach ($modules as $module) {
    ////dpm(strstr($function_name, $module), 'strstr');
    if (strstr($function_name, $module)) {
      if (strlen($module) > strlen($implemented_in)) {
        $implemented_in = $module;
      }
    }
  }

  return $implemented_in;
}

/**
 * Detects whether a page request delivers HTML or not.
 *
 * @return bool
 *   TRUE for HTML page requests, FALSE otherwise.
 * 
 * @see devel_shutdown_real()
 */
function pathinfo_html_page() {
  if (function_exists('drupal_get_http_header')) {
    $header = drupal_get_http_header('content-type');
    if ($header) {
      $formats = array('xml', 'javascript', 'json', 'plain', 'image', 'application', 'csv', 'x-comma-separated-values');
      foreach ($formats as $format) {
        if (strstr($header, $format)) {
          return FALSE;
        }
      }
    }
  }

  return TRUE;
}
